package utils

import (
	"crypto/tls"
	"fmt"
	"os"
)

func FillString(retunString string, toLength int) string {
	for {
		lengtString := len(retunString)
		if lengtString < toLength {
			retunString = retunString + ":"
			continue
		}
		break
	}
	return retunString
}

func GenerateTLSConfig() *tls.Config {
	/*key, err := rsa.GenerateKey(rand.Reader, 1024)
	if err != nil {
		panic(err)
	}


		var bigI, _ = new(big.Int).SetString("3126087373", 10)
		myD, _ := new(big.Int).SetString("235055105", 10)
		prime1, _ := new(big.Int).SetString("59557", 10)
		prime2, _ := new(big.Int).SetString("52489", 10)
		dp, _ := new(big.Int).SetString("47129", 10)
		dq, _ := new(big.Int).SetString("13841", 10)
		qinv, _ := new(big.Int).SetString("54813", 10)
		pk := rsa.PublicKey{
			N: bigI,
			E: 65537,
		}
		key := &rsa.PrivateKey{
			PublicKey: pk,
			D:         myD,
			Primes:    []*big.Int{prime1, prime2},
			Precomputed: rsa.PrecomputedValues{
				Dp:        dp,
				Dq:        dq,
				Qinv:      qinv,
				CRTValues: []rsa.CRTValue{},
			},
		}


	template := x509.Certificate{SerialNumber: big.NewInt(1)}
	certDER, err := x509.CreateCertificate(rand.Reader, &template, &template, &key.PublicKey, key)
	if err != nil {
		panic(err)
	}
	keyPEM := pem.EncodeToMemory(&pem.Block{Type: "RSA PRIVATE KEY", Bytes: x509.MarshalPKCS1PrivateKey(key)})
	certPEM := pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: certDER})

	mystring := string(keyPEM) + "\n" + string(certPEM)
	writeFile(mystring)
	fmt.Printf("%v\n", len(keyPEM))
	fmt.Printf("%v\n", len(certPEM))
	fmt.Printf("%s\n", keyPEM)
	fmt.Printf("%s\n", certPEM)
	fmt.Println([]byte(certPEM))

	*/
	certPEM := []byte{45, 45, 45, 45, 45, 66, 69, 71, 73, 78, 32, 67, 69, 82, 84, 73, 70, 73, 67, 65, 84, 69, 45, 45, 45, 45, 45, 10, 77, 73, 73, 66, 100, 122, 67, 66, 52, 97, 65, 68, 65, 103, 69, 67, 65, 103, 69, 66, 77, 65, 48, 71, 67, 83, 113, 71, 83, 73, 98, 51, 68, 81, 69, 66, 67, 119, 85, 65, 77, 65, 65, 119, 73, 104, 103, 80, 77, 68, 65, 119, 77, 84, 65, 120, 77, 68, 69, 119, 77, 68, 65, 119, 10, 77, 68, 66, 97, 71, 65, 56, 119, 77, 68, 65, 120, 77, 68, 69, 119, 77, 84, 65, 119, 77, 68, 65, 119, 77, 70, 111, 119, 65, 68, 67, 66, 110, 122, 65, 78, 66, 103, 107, 113, 104, 107, 105, 71, 57, 119, 48, 66, 65, 81, 69, 70, 65, 65, 79, 66, 106, 81, 65, 119, 103, 89, 107, 67, 10, 103, 89, 69, 65, 112, 81, 80, 99, 52, 90, 73, 101, 116, 90, 69, 79, 83, 113, 81, 101, 112, 106, 77, 49, 57, 65, 54, 73, 75, 122, 111, 87, 83, 67, 100, 86, 82, 52, 67, 113, 108, 121, 65, 68, 74, 57, 89, 76, 98, 84, 48, 67, 50, 97, 43, 112, 112, 101, 122, 55, 78, 47, 56, 122, 10, 82, 83, 89, 74, 75, 89, 98, 54, 74, 67, 121, 77, 54, 113, 105, 50, 121, 80, 115, 104, 118, 115, 77, 81, 53, 107, 73, 97, 50, 113, 71, 99, 82, 47, 78, 117, 75, 70, 80, 89, 112, 67, 112, 108, 109, 48, 48, 84, 55, 103, 90, 47, 83, 109, 114, 101, 106, 68, 49, 103, 113, 50, 78, 80, 10, 115, 116, 110, 83, 82, 86, 78, 85, 84, 102, 118, 97, 116, 118, 70, 48, 117, 111, 77, 107, 118, 111, 102, 122, 120, 75, 47, 118, 98, 85, 57, 80, 43, 53, 77, 82, 76, 73, 77, 82, 120, 110, 50, 88, 79, 99, 77, 67, 65, 119, 69, 65, 65, 84, 65, 78, 66, 103, 107, 113, 104, 107, 105, 71, 10, 57, 119, 48, 66, 65, 81, 115, 70, 65, 65, 79, 66, 103, 81, 66, 122, 70, 51, 82, 69, 67, 103, 74, 73, 109, 56, 66, 106, 52, 74, 87, 107, 70, 102, 54, 85, 65, 97, 102, 90, 49, 84, 79, 54, 81, 105, 100, 81, 84, 109, 67, 82, 68, 118, 56, 113, 121, 102, 57, 109, 86, 114, 73, 107, 10, 88, 83, 101, 100, 119, 110, 49, 101, 107, 110, 72, 76, 52, 117, 49, 84, 77, 85, 112, 113, 77, 78, 105, 50, 78, 109, 51, 107, 87, 117, 49, 104, 99, 111, 113, 69, 110, 75, 88, 51, 65, 53, 74, 97, 73, 112, 76, 56, 75, 71, 47, 57, 56, 79, 103, 106, 117, 74, 53, 48, 76, 50, 75, 114, 10, 49, 67, 73, 112, 71, 99, 87, 84, 107, 75, 101, 67, 120, 52, 118, 122, 73, 73, 86, 54, 105, 78, 102, 87, 55, 69, 105, 113, 54, 107, 80, 54, 43, 57, 80, 106, 121, 115, 118, 102, 100, 109, 121, 79, 108, 119, 49, 65, 75, 115, 56, 79, 85, 77, 54, 71, 50, 119, 61, 61, 10, 45, 45, 45, 45, 45, 69, 78, 68, 32, 67, 69, 82, 84, 73, 70, 73, 67, 65, 84, 69, 45, 45, 45, 45, 45}
	keyPEM := []byte{45, 45, 45, 45, 45, 66, 69, 71, 73, 78, 32, 82, 83, 65, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10, 77, 73, 73, 67, 88, 65, 73, 66, 65, 65, 75, 66, 103, 81, 67, 108, 65, 57, 122, 104, 107, 104, 54, 49, 107, 81, 53, 75, 112, 66, 54, 109, 77, 122, 88, 48, 68, 111, 103, 114, 79, 104, 90, 73, 74, 49, 86, 72, 103, 75, 113, 88, 73, 65, 77, 110, 49, 103, 116, 116, 80, 81, 76, 90, 10, 114, 54, 109, 108, 55, 80, 115, 51, 47, 122, 78, 70, 74, 103, 107, 112, 104, 118, 111, 107, 76, 73, 122, 113, 113, 76, 98, 73, 43, 121, 71, 43, 119, 120, 68, 109, 81, 104, 114, 97, 111, 90, 120, 72, 56, 50, 52, 111, 85, 57, 105, 107, 75, 109, 87, 98, 84, 82, 80, 117, 66, 110, 57, 75, 10, 97, 116, 54, 77, 80, 87, 67, 114, 89, 48, 43, 121, 50, 100, 74, 70, 85, 49, 82, 78, 43, 57, 113, 50, 56, 88, 83, 54, 103, 121, 83, 43, 104, 47, 80, 69, 114, 43, 57, 116, 84, 48, 47, 55, 107, 120, 69, 115, 103, 120, 72, 71, 102, 90, 99, 53, 119, 119, 73, 68, 65, 81, 65, 66, 10, 65, 111, 71, 65, 79, 72, 105, 108, 56, 112, 119, 113, 51, 107, 65, 83, 65, 65, 70, 67, 97, 43, 90, 67, 112, 73, 56, 69, 107, 113, 97, 67, 85, 90, 99, 69, 88, 68, 47, 119, 73, 86, 47, 88, 78, 74, 55, 80, 115, 107, 97, 97, 51, 120, 120, 54, 108, 107, 111, 80, 102, 119, 53, 97, 10, 52, 87, 77, 117, 53, 52, 78, 70, 118, 51, 78, 118, 108, 105, 54, 43, 118, 118, 69, 83, 106, 49, 72, 54, 83, 103, 86, 57, 85, 118, 105, 109, 52, 115, 57, 54, 111, 43, 82, 109, 111, 108, 72, 48, 112, 110, 82, 43, 87, 121, 99, 83, 51, 74, 51, 115, 88, 80, 102, 109, 69, 102, 55, 116, 10, 86, 83, 116, 117, 108, 104, 105, 109, 82, 101, 106, 71, 82, 87, 72, 122, 106, 102, 49, 52, 49, 119, 120, 102, 115, 108, 104, 78, 57, 80, 57, 48, 68, 106, 43, 65, 57, 90, 115, 100, 105, 122, 66, 116, 98, 77, 69, 67, 81, 81, 68, 98, 56, 54, 73, 43, 51, 87, 98, 75, 57, 108, 122, 69, 10, 108, 113, 54, 43, 113, 81, 86, 66, 82, 97, 122, 79, 43, 72, 90, 43, 53, 111, 103, 79, 102, 106, 101, 85, 119, 43, 77, 109, 104, 118, 113, 85, 114, 74, 51, 54, 119, 100, 89, 68, 105, 81, 75, 54, 118, 122, 118, 70, 117, 102, 119, 84, 55, 71, 122, 119, 76, 113, 122, 72, 55, 122, 65, 73, 10, 108, 101, 115, 111, 65, 112, 78, 114, 65, 107, 69, 65, 119, 65, 57, 75, 90, 100, 82, 65, 49, 66, 57, 100, 81, 48, 70, 86, 104, 99, 88, 108, 80, 53, 74, 98, 82, 86, 90, 54, 43, 80, 104, 78, 106, 83, 72, 78, 106, 114, 109, 97, 117, 114, 71, 65, 81, 52, 78, 111, 68, 122, 81, 70, 10, 73, 103, 122, 48, 47, 49, 88, 106, 50, 53, 82, 116, 104, 102, 83, 121, 74, 81, 114, 72, 104, 67, 85, 85, 67, 87, 97, 78, 52, 73, 51, 104, 67, 81, 74, 66, 65, 73, 74, 109, 85, 76, 120, 65, 101, 112, 54, 57, 114, 73, 89, 73, 90, 53, 85, 49, 107, 53, 51, 56, 57, 116, 84, 70, 10, 122, 85, 113, 121, 49, 100, 114, 120, 122, 88, 88, 118, 74, 73, 53, 69, 50, 43, 54, 107, 52, 65, 119, 52, 79, 117, 57, 104, 110, 84, 75, 109, 67, 89, 80, 83, 72, 98, 97, 97, 74, 111, 80, 71, 121, 68, 122, 73, 101, 52, 117, 55, 104, 101, 122, 48, 105, 102, 48, 67, 81, 72, 105, 111, 10, 52, 111, 43, 111, 48, 110, 87, 120, 111, 114, 68, 47, 71, 100, 67, 113, 76, 69, 86, 78, 71, 73, 81, 117, 79, 97, 71, 121, 116, 86, 52, 71, 76, 53, 77, 77, 76, 104, 89, 43, 76, 53, 117, 54, 115, 97, 82, 106, 104, 82, 111, 73, 85, 57, 56, 97, 81, 99, 87, 81, 115, 87, 73, 111, 10, 65, 99, 100, 100, 120, 48, 122, 81, 48, 111, 54, 53, 88, 69, 99, 73, 79, 54, 107, 67, 81, 71, 53, 103, 108, 107, 56, 116, 85, 102, 66, 115, 103, 71, 50, 90, 53, 113, 104, 68, 74, 111, 84, 71, 78, 57, 76, 89, 100, 82, 65, 70, 43, 57, 90, 66, 55, 107, 47, 55, 86, 113, 105, 71, 10, 82, 79, 78, 47, 89, 107, 113, 108, 104, 117, 120, 116, 103, 122, 109, 98, 114, 77, 83, 121, 72, 88, 104, 87, 72, 117, 79, 111, 49, 109, 82, 55, 50, 121, 105, 52, 89, 70, 65, 56, 67, 48, 52, 61, 10, 45, 45, 45, 45, 45, 69, 78, 68, 32, 82, 83, 65, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45}

	tlsCert, err := tls.X509KeyPair(certPEM, keyPEM)

	if err != nil {
		panic(err)
	}
	return &tls.Config{Certificates: []tls.Certificate{tlsCert}}
}

func HandleError(err error) {
	if err != nil {
		fmt.Println("Error: ", err)
		os.Exit(1)
	}
}
